# Khối server định nghĩa một "virtual host" để xử lý các request
server {
    # Nginx sẽ lắng nghe các request đến trên cổng 80 (cổng HTTP mặc định)
    listen 80;

    # Thư mục gốc chứa các file tĩnh của React (phải khớp với đích copy trong Dockerfile)
    root /usr/share/nginx/html;

    # Các file mặc định sẽ được tìm kiếm khi truy cập một thư mục
    index index.html index.htm;

    # Location block này xử lý tất cả các request không khớp với các location khác
    location / {
        # Đây là cấu hình quan trọng nhất cho các Single Page Application (SPA) như React.
        # Nginx sẽ thử tìm file/thư mục khớp với URI được yêu cầu.
        # Nếu không tìm thấy ($uri và $uri/ đều thất bại), nó sẽ không báo lỗi 404.
        # Thay vào đó, nó sẽ trả về file /index.html.
        # Điều này cho phép React Router xử lý việc định tuyến ở phía client.
        try_files $uri $uri/ /index.html;
    }

    # Cấu hình proxy cho API thêm sinh viên
    # Bất kỳ request nào bắt đầu bằng /students/ sẽ được chuyển tiếp
    location /students/ {
        # 'backend' là tên của service backend trong file docker-compose.yml
        # Docker sẽ tự động phân giải 'backend' thành địa chỉ IP của container backend.
        proxy_pass http://backend:8000;
        
        # Các header cần thiết để backend nhận đúng thông tin request gốc
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Cấu hình proxy cho API nhận diện
    # Bất kỳ request nào bắt đầu bằng /recognize/ sẽ được chuyển tiếp
    location /recognize/ {
        proxy_pass http://backend:8000;

        # Các header cần thiết
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}